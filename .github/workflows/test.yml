name: Run Tests with All ML Backends

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: Install dependencies explicitly
      run: |
        python -m pip install --upgrade pip setuptools wheel
        # Installer NumPy en premier avec une version spécifique
        python -m pip install numpy==1.24.3
        # Afficher les détails de l'environnement Python
        python --version
        which python
        python -m site
        # Vérifier que numpy est installé
        python -c "import numpy; print('NumPy version:', numpy.__version__)"
        # Installer les dépendances de test depuis requirements-test.txt
        python -m pip install -r requirements-test.txt
        
    - name: List installed packages
      run: |
        pip freeze
        
    - name: Install package
      run: |
        # Installer le package lui-même
        python -m pip install -e .
        
    - name: Debug Python path
      run: |
        python -c "import sys; print('Python path:', sys.path)"
        python -c "import sys; print('Workspace directory listed in path?', '/home/runner/work/pinard/pinard' in sys.path)"
        
    - name: Verify imports
      run: |
        python -c "import numpy; import pandas; import scipy; import sklearn; import pywt; print('Critical imports successful')"
        python -c "import pytest; print('Pytest import successful')"
        python -c "import pinard; print('Pinard import successful')"
        
    - name: Test with pytest
      run: |
        python -m pytest -v tests/
        
    - name: Run coverage tests
      run: |
        python -m pytest -v tests/ --cov=pinard --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false